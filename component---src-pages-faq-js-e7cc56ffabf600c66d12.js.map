{"version":3,"sources":["webpack:///./src/pages/faq.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Logo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","components_header__WEBPACK_IMPORTED_MODULE_2__","components_footer__WEBPACK_IMPORTED_MODULE_3__","Faq","a","createElement","Fragment","className","href","id","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","Logo","style","fontWeight","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","Header","state","open","handleMenu","_this","setState","_this2","this","menu","react__WEBPACK_IMPORTED_MODULE_2___default","site","siteMetadata","navigation","map","link","onClick","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","path","key","activeClassName","displayName","react_media__WEBPACK_IMPORTED_MODULE_3__","maxWidth","matches","_Logo__WEBPACK_IMPORTED_MODULE_5__","Component","_public_static_d_182442897_json__WEBPACK_IMPORTED_MODULE_1__","Footer","react__WEBPACK_IMPORTED_MODULE_4___default","contributors","contributor","name","src","gravatar","alt","replace","twitter_name","github_name","Date","getFullYear","_Logo__WEBPACK_IMPORTED_MODULE_7__","gatsby__WEBPACK_IMPORTED_MODULE_6__","_public_static_d_66919261_json__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-faq-js-e7cc56ffabf600c66d12.js","sourcesContent":["import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport Header from 'components/header';\nimport Footer from 'components/footer';\n\nconst Faq = () => (\n  <React.Fragment>\n      <Helmet>\n          <title>F.A.Q.</title>\n      </Helmet>\n    <Header/>\n\n    <h1>F.A.Q.</h1>\n\n    <section className=\"whiter boxes page-faq inner\">\n\n      <div className=\"w-container content-container\">\n        <div className=\"w-row\">\n\n          <div className=\"w-col w-col-3 w-clearfix side-container\">\n\n            <h2>QUESTIONS</h2>\n            <nav>\n              <ul>\n                <li><a className=\"innsite\" href=\"#what-is-gisto\">What is Gisto?</a>\n                </li>\n                <li><a className=\"innsite\" href=\"#auth\">Authentication</a></li>\n                <li><a className=\"innsite\" href=\"#do-you-use-server\">Do you use\n                                    backend server?\n                </a>\n                </li>\n                <li><a className=\"innsite\" href=\"#who-can-see-my-gists\">Who can see\n                                    my\n                                    gists?\n                </a>\n                </li>\n                <li><a className=\"innsite\" href=\"#run-as-portable\">Use gisto as\n                                    portable application in windows.\n                </a>\n                </li>\n                <li><a className=\"innsite\" href=\"#do-you-plan-to-add-feature\">Do you\n                                    plan to support / add support for\n                                    [future-name-here]?\n                </a>\n                </li>\n                <li><a className=\"innsite\" href=\"#issues-bugs-features\">Issues, bug\n                                    reporting, pull and feature requests\n                </a>\n                </li>\n                <li><a className=\"innsite\" href=\"#how-to-contact\">How to contact\n                                    us\n                </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n\n          <div className=\"w-col w-col-9 w-clearfix\">\n\n\n            <h2 id=\"what-is-gisto\">What is Gisto?</h2>\n\n            <p>Gisto is a code snippet manager that runs on GitHub Gists and adds\n                            additional features\n                            such as searching, tagging and sharing gists while including a rich code\n                            editor.\n            </p>\n\n            <p>Gisto is cross platform and is in constant sync with GitHub so you can\n                            view\n                            and edit\n                            your Gists via both Gisto and GitHub.\n            </p>\n\n\n            <h2 id=\"auth\">Authentication</h2>\n\n            <p>Gisto authenticates to GitHub by using basic authentication over SSL and\n                            retrieving an oAuth2 token\n                            thus the need for your GitHub user and password.\n            </p>\n\n            <p>Gisto only saves the oAuth2 token received after authenticating and\n                            nothing\n                            else.\n                            If you would rather to supply your own access token without providing\n                            Gisto your login details you\n                            may manually create an access token from the account settings at GitHub\n                            and login using the\n                            generated token.\n            </p>\n\n            <p>This token will be saved permanently until you log out.</p>\n\n            <h2 id=\"do-you-use-server\">Do you use backend server?</h2>\n\n            <p>Gisto is using GitHub gist API and communicates directly with Github, no\n                            3rd party server or database\n                            involved in gist management.\n            </p>\n\n            <p>However we do use a backend server for \"notifications and sharing\n                            service\",\n                            the only data stored is username\n                            and gist ID and this is to allow Gisto to notify user if there are Gists\n                            shared with him.\n            </p>\n\n            <p>You also have the option of running your own notification server so you\n                            can\n                            be sure your data is secure.\n            </p>\n\n            <h2 id=\"who-can-see-my-gists\">Who can see my Gists?</h2>\n\n            <p>As per GitHub Guidelines Gists are not private and are available to the\n                            public.\n            </p>\n\n            <p>The difference between secret and public Gists is that public Gists are\n                            listed on GitHub website for\n                            public viewing and searching while secret Gists are not\n            </p>\n\n\n            <h2 id=\"run-as-portable\">Use gisto as portable application on windows?</h2>\n\n            <p>For a non-installer version of Gisto, you can:</p>\n\n            <ul className=\"fa-ul\">\n              <li className=\"icons-li\"><i\n                                className=\"fa fa-chevron-circle-right\" /> Download a ZIP file of\n                                Windows Version from Gisto \"Nightly\" builds: <a\n                                    href=\"http://build.gistoapp.com\">build.gistoapp.com\n                                </a> and\n                                extract it to some directory of your choosing.\n              </li>\n              <li className=\"icons-li\"><i\n                                className=\"fa fa-chevron-circle-right\" /> Create a empty file in\n                                directory you've extracted Gisto ZIP named <em>gisto.bat</em>\n              </li>\n              <li className=\"icons-li\"><i\n                                className=\"fa fa-chevron-circle-right\" /> Edit <em>gisto.bat</em> file\n                                and add the following content: <code>gisto.exe\n                                    --data-path=\"./gistoData\"\n                                </code>\n              </li>\n              <li className=\"icons-li\"><i\n                                className=\"fa fa-chevron-circle-right\" /> Start Gisto by\n                                double-click the <em>gisto.bat</em> file.\n              </li>\n            </ul>\n\n            <p>You have now your portable version of Gisto and all data will be saved in\n                            directory named <em>gistoData</em>, relative to path where you are\n                            running\n                            Gisto from.\n            </p>\n\n            <p>In order to update portable Gisto - just download new version ZIP and\n                            extract it by overwriting the existing files.\n            </p>\n\n            <h2 id=\"do-you-plan-to-add-feature\">Do you plan to support / add support for\n                            [<i>future-name-here</i>]?\n            </h2>\n\n            <p>Please open a feature request in our <a\n                            href=\"https://github.com/Gisto/Gisto/issues\">issue tracker\n            </a>, we\n                            appreciate and strive for\n                            suggestions on how to improve Gisto.\n            </p>\n\n            <h2 id=\"issues-bugs-features\">Issues, bug reporting, pull and feature\n                            requests\n            </h2>\n\n            <p>Please feel free to add a bug / feature request / suggestions to the <a\n                            href=\"https://github.com/Gisto/Gisto/issues\">issue tracker\n            </a>.\n                            Pull requests are also very welcome as well.\n            </p>\n\n            <h2 id=\"how-to-contact\">How to contact us</h2>\n\n            <p>Twitter: <a href=\"https://twitter.com/gistoapp\">@gistoapp</a></p>\n\n            <p>Email: contact@gistoapp.com</p>\n\n            <p>Issue tracker: <a href=\"https://github.com/Gisto/Gisto/issues\">Issue\n                            tracker at GitHub\n            </a>\n            </p>\n\n          </div>\n\n        </div>\n      </div>\n\n    </section>\n\n    <Footer/>\n  </React.Fragment>\n);\n\nexport default Faq;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\n\nconst Logo = () => (\n  <span className=\"gisto\" style={ { fontWeight: 400 } }>{ '{ Gisto }' }</span>\n);\n\nexport default Logo;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react';\nimport Media from 'react-media';\nimport { graphql, Link, StaticQuery } from 'gatsby';\nimport Logo from './Logo';\n\nclass Header extends Component {\n  state = {\n    open: false\n  };\n\n  handleMenu = (open) => this.setState({ open });\n\n  render() {\n    const { data } = this.props;\n\n    const menu = (\n      <React.Fragment>\n        {data.site.siteMetadata && data.site.siteMetadata.navigation.map((link) => (\n          <span onClick={ () => this.handleMenu(false) }>\n            <Link to={ link.path }\n                key={ link.path }\n                activeClassName=\"active\"\n                className=\"nav-link first current\">\n              {link.displayName}\n            </Link>\n          </span>\n        ))}\n      </React.Fragment>\n    );\n\n\n    return (\n      <header className=\"section header\">\n        <div className=\"header\">\n\n          <Media query={ { maxWidth: 599 } }>\n            {(matches) => matches ? (\n              <React.Fragment>\n                <div className=\"mobile-menu\"\n                       onClick={ () => this.handleMenu(this.state.open = !this.state.open) }>\n                  <i className={ `fa ${this.state.open ? 'fa-times' : 'fa-bars'} fa-2x` }/>\n                </div>\n                {this.state.open && (\n                <div>\n                  {menu}\n                </div>\n                  )}\n              </React.Fragment>\n              ) : null\n            }\n          </Media>\n\n          <h1>\n            <strong>\n              <Link to=\"/\">\n                <Logo/>\n              </Link>\n            </strong>\n          </h1>\n        </div>\n\n        <div className=\"w-container\">\n          <div className=\"w-row\">\n            <nav className=\"w-col w-col-12 w-clearfix nav-column\">\n              {menu}\n            </nav>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default (props) => (\n  <StaticQuery\n    query={ graphql`\n        query HeaderQuery {\n          site {\n            siteMetadata {\n              navigation {\n                  path\n                  displayName\n              }\n            }\n          }\n        }\n      ` }\n\n    render={ (data) => <Header data={ data } { ...props }/> }/>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, StaticQuery } from 'gatsby';\n\nimport Logo from './Logo';\n\nconst Footer = ({ data }) => (\n  <React.Fragment>\n    <div className=\"push\"/>\n    <footer>\n\n      <div className=\"w-container\">\n        <div className=\"w-row\">\n\n          {data.site.siteMetadata.contributors.map((contributor) => (\n            <React.Fragment key={ contributor.name }>\n              <div className=\"w-col w-col-1 w-clearfix\">\n                <img src={ contributor.gravatar } alt={ contributor.name }/>\n              </div>\n              <div className=\"w-col w-col-5 w-clearfix\">\n                <h3>{contributor.name}</h3>\n\n                <p>\n                  <a href={ contributor.site }>\n                    { contributor.site.replace('https://', '') }\n                  </a> |&nbsp;\n                  <a href={ `https://twitter.com/${contributor.twitter_name}` }>\n                    <i className=\"fa fa-twitter\"/>\n                  </a> |&nbsp;\n                  <a href={ `https://github.com/${contributor.github_name}` }>\n                    <i className=\"fa fa-github\"/>\n                  </a>\n                </p>\n              </div>\n            </React.Fragment>\n          ))}\n\n        </div>\n      </div>\n\n      <p className=\"txt-center\">&copy; {new Date().getFullYear()} <Logo/></p>\n\n    </footer>\n\n    <a href=\"#top\" className=\"top innsite\"><i className=\"fa fa-arrow-up\"/></a>\n\n  </React.Fragment>\n);\n\nFooter.propTypes = {\n  data: PropTypes.object\n};\n\nexport default (props) => (\n  <StaticQuery\n        query={ graphql`\n        query FooterQuery {\n          site {\n            siteMetadata {\n              contributors {\n                  name\n                  gravatar\n                  site\n                  twitter_name\n                  github_name\n                  description\n              }\n            }\n          }\n        }\n      ` }\n\n        render={ (data) => <Footer data={ data } { ...props }/> }/>\n);\n"],"sourceRoot":""}