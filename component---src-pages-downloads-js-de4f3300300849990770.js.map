{"version":3,"sources":["webpack:///./src/components/Downloads.js","webpack:///./src/pages/downloads.js"],"names":["getFileType","file","split","reverse","getOsType","formateDate","date","Date","toLocaleDateString","weekday","year","month","day","dataStructure","asset","os","name","link","browser_download_url","fileType","Downloads","state","publishedAt","latestVersion","downloads","getDownloadText","download","match","renderDownloads","reduce","acc","push","key","href","componentDidMount","sessionStorage","getItem","latest","JSON","parse","assets","map","filter","this","setState","published_at","fetch","then","response","json","data","setItem","stringify","render","className","Component","Fragment"],"mappings":"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","file":"component---src-pages-downloads-js-de4f3300300849990770.js","sourcesContent":["import React, { Component } from 'react';\n\nfunction getFileType(file) {\n  return file.split('.').reverse()[0];\n}\n\nfunction getOsType(file) {\n  const fileExtension = getFileType(file);\n\n  switch (fileExtension) {\n    case 'snap':\n    case 'AppImage':\n    case 'deb':\n    case 'rpm':\n    case 'pacman': {\n      return 'linux';\n    }\n\n    case 'dmg':\n    case 'zip': {\n      return 'mac';\n    }\n\n    case 'exe': {\n      return 'windows';\n    }\n\n    default:\n      return 'unknown';\n  }\n}\n\nfunction formateDate(date) {\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const published = new Date(date);\n\n  return published.toLocaleDateString('en-US', options);\n}\n\nfunction dataStructure(asset) {\n  return {\n    os: getOsType(asset.name),\n    link: asset.browser_download_url,\n    fileType: getFileType(asset.name)\n  };\n}\n\nclass Downloads extends Component {\n  state = {\n    publishedAt: null,\n    latestVersion: null,\n    downloads: null\n  };\n\n  componentDidMount() {\n    if (!sessionStorage.getItem('gistoReleases')) {\n      fetch('https://api.github.com/repos/Gisto/Gisto/releases/latest')\n        .then((response) => response.json())\n        .then((data) => {\n          sessionStorage.setItem('gistoReleases', JSON.stringify(data));\n          const latest = data;\n          const downloads = latest.assets\n            .map((asset) => {\n              return dataStructure(asset);\n            })\n            .filter((os) => {\n              return os !== 'unknown';\n            });\n\n          this.setState({\n            publishedAt: formateDate(latest.published_at),\n            latestVersion: `v${latest.name}`,\n            downloads\n          });\n        });\n    } else {\n      const latest = JSON.parse(sessionStorage.getItem('gistoReleases'));\n      const downloads = latest.assets\n        .map((asset) => {\n          return dataStructure(asset);\n        })\n        .filter((os) => {\n          return os !== 'unknown';\n        });\n\n      this.setState({\n        publishedAt: formateDate(latest.published_at),\n        latestVersion: `v${latest.name}`,\n        downloads\n      });\n    }\n  }\n\n  getDownloadText = (os, download) => os === 'windows' && download.link.match(/Portable\\.exe/) ? 'portable' : download.fileType;\n\n  renderDownloads = (os) => {\n    return (\n      this.state.downloads\n      && this.state.downloads.reduce((acc, download) => {\n        if (download.os === os) {\n          acc.push(\n            <a key={ download.fileType } href={ download.link }>\n              <b>{this.getDownloadText(os, download)}</b>\n            </a>\n          );\n        }\n\n        return acc;\n      }, [])\n    );\n  };\n\n  render() {\n    return (\n      <section className=\"whiter boxes inner\">\n        <div className=\"w-container\">\n          <p className=\"txt-grey txt-center\">\n            <b>LATEST VERSION:</b>\n            &nbsp;\n            <span className=\"latest-release-version\">{this.state.latestVersion}</span> |\n            <a\n              href=\"https://github.com/Gisto/Gisto/blob/master/CHANGELOG.md\"\n              className=\"txt-red txt-underline\">\n              Change log\n            </a>\n            | <b>RELEASED:</b> <span className=\"published_at\">{this.state.publishedAt}</span>\n          </p>\n          <br />\n\n          <div className=\"w-container\">\n            <div className=\"w-row\">\n              <div className=\"download w-col w-col-3 w-clearfix txt-center\">\n                <p className=\"txt-center\">\n                  <i className=\"fa fa-windows fa-4x\" />\n                </p>\n\n                <h3>\n                  <b>Windows</b>\n                  <br />\n                  Download\n                </h3>\n                <span>{this.renderDownloads('windows')}</span>\n              </div>\n\n              <div className=\"download w-col w-col-3 w-clearfix txt-center\">\n                <p className=\"txt-center\">\n                  <i className=\"fa fa-apple fa-4x\" />\n                </p>\n\n                <h3>\n                  <b>macOS</b>\n                  <br />\n                  Download\n                </h3>\n                <span>{this.renderDownloads('mac')}</span>\n              </div>\n\n              <div className=\"download w-col w-col-3 w-clearfix txt-center\">\n                <p className=\"txt-center\">\n                  <i className=\"fa fa-linux fa-4x\" />\n                </p>\n\n                <h3>\n                  <b>Linux</b>\n                  <br />\n                  Download\n                </h3>\n                <span>\n                  {this.renderDownloads('linux')}\n                </span>\n              </div>\n\n              <div className=\"download w-col w-col-3 w-clearfix txt-center\">\n                <p className=\"txt-center\">\n                  <i className=\"fa fa-cogs fa-4x\" />\n                </p>\n\n                <h3>\n                  Latest\n                  <br /> <b>from Github</b>\n                </h3>\n                <a href=\"https://github.com/Gisto/Gisto/releases\">GitHub releases</a>\n              </div>\n            </div>\n\n            <div className=\"w-container\">\n              <div className=\"w-row\">\n                <div className=\"w-col w-col-pull-1 w-col-push-3 w-col-6 \">\n                  <h2>Other install options:</h2>\n\n                  <div>\n                    <p>\n                      via <b>Homebrew cask</b> (MacOS):\n                    </p>\n\n                    <pre>\n                      <span>SHELL</span>$ brew install --cask gisto\n                    </pre>\n                    <small>Please note that it might be slightly outdated version</small>\n                    <br />\n                    <br />\n                  </div>\n\n                  <div>\n                    <p>\n                      via <b>snapcraft</b> (Linux):\n                    </p>\n\n                    <pre>\n                      <span>SHELL</span>$ sudo snap install gisto\n                    </pre>\n                    <small>\n                      Install Gisto on your Linux distribution:{' '}\n                      <a href=\"https://snapcraft.io/gisto\">https://snapcraft.io/gisto</a>\n                    </small>\n                    <br />\n                    <br />\n                  </div>\n\n                  <div>\n                    <p>\n                      via <b>AUR</b> (ArchLinux):\n                    </p>\n\n                    <pre>\n                      <span>SHELL (using yay)</span>$ yay -S gisto\n                    </pre>\n                    <pre>\n                      <span>SHELL (using pakku)</span>$ pakku -S gisto\n                    </pre>\n                    <pre>\n                      <span>SHELL (using trizen)</span>$ trizen -S gisto\n                    </pre>\n\n                    <small>Please note that it might be slightly outdated version</small>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"w-row\">\n              <p className=\"txt-grey txt-center\">\n                <b>PREVIOUS VERSION:</b> 0.3.2\n              </p>\n              <br />\n              <div className=\"w-col w-col-12 w-clearfix txt-center\">\n                <p>\n                  Development of this version is stopped at &quote;v0.3.2&quote; and it should be\n                  considered obsolete. No updates, features or bugfixes will be issued.\n                </p>\n              </div>\n              <div className=\"download w-col w-col-12 w-clearfix txt-center\">\n                <a href=\"https://github.com/Gisto/Gisto/releases/download/0.3.2-beta/Gisto-v0.3.2-windows-x64.zip\">\n                  <i className=\"fa fa-windows\" /> Windows\n                </a>\n                <a href=\"https://github.com/Gisto/Gisto/releases/download/0.3.2-beta/Gisto-v0.3.2-macos-x64.dmg\">\n                  <i className=\"fa fa-apple\" /> MACOS\n                </a>\n                <a href=\"https://github.com/Gisto/Gisto/releases/download/0.3.2-beta/Gisto-v0.3.2-linux-win32.zip\">\n                  <i className=\"fa fa-linux\" /> Linux 32bit\n                </a>\n                <a href=\"https://github.com/Gisto/Gisto/releases/download/0.3.2-beta/Gisto-v0.3.2-linux-x64.zip\">\n                  <i className=\"fa fa-linux\" /> Linux 64bit\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Downloads;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport Header from 'components/header';\nimport Footer from 'components/footer';\nimport Downloads from 'components/Downloads';\n\nexport default () => (\n  <React.Fragment>\n    <Helmet>\n      <title>Downloads</title>\n    </Helmet>\n    <Header/>\n\n    <h1>Downloads</h1>\n\n    <Downloads/>\n\n    <Footer/>\n  </React.Fragment>\n);\n"],"sourceRoot":""}